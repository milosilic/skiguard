package com.bitgear.skiguard.dao;

import org.greenrobot.greendao.annotation.*;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;
// KEEP INCLUDES END

/**
 * Entity mapped to table "PISTE".
 */
@Entity
public class Piste {

    @Id(autoincrement = true)
    private Long id;

    @NotNull
    private String name;

    @NotNull
    private String category;

    @NotNull
    private String boundary;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    @Generated
    public Piste() {
    }

    public Piste(Long id) {
        this.id = id;
    }

    @Generated
    public Piste(Long id, String name, String category, String boundary) {
        this.id = id;
        this.name = name;
        this.category = category;
        this.boundary = boundary;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @NotNull
    public String getName() {
        return name;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setName(@NotNull String name) {
        this.name = name;
    }

    @NotNull
    public String getCategory() {
        return category;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setCategory(@NotNull String category) {
        this.category = category;
    }

    @NotNull
    public String getBoundary() {
        return boundary;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setBoundary(@NotNull String boundary) {
        this.boundary = boundary;
    }

    // KEEP METHODS - put your custom methods here

    @NotNull
    public List<String> getCategoryList() {

        Type listType = new TypeToken<ArrayList<String>>(){}.getType();
        List<String> arrayList = new Gson().fromJson(category, listType);

        return arrayList;
    }

    public void setCategoryList(@NotNull List<String> category) {
        String arrayString = new Gson().toJson(category);
        this.category = arrayString;
    }

    public void setBoundaryList(@NotNull List<String> boundaryList) {
        String arrayString = new Gson().toJson(boundaryList);
        this.boundary = arrayString;
    }
    // KEEP METHODS END

}
